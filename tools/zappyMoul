#! /usr/bin/env python

import sys, os, socket, string
import random, time

random.seed(time.time())
simpleCommand = ["connect_nbr",
                 "droite",
                 "gauche",
                 "voir",
                 "inventaire",
                 "expulse",
                 "fork",
                 "avance",
                 "prend nourriture"
                 ]

CRLF = "\r\n"

class SimpleClient:
    "Client support class for simple Internet protocols."

    def __init__(self, host, port):
        "Connect to an Internet server."
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.sock.connect((host, port))
        self.file = self.sock.makefile("rb") # buffered

    def writeline(self, line):
        "Send a line to the server."
        self.sock.send(line + CRLF) # unbuffered write

    def read(self, maxbytes = None):
        "Read data from server."
        if maxbytes is None:
            return self.file.read()
        else:
            return self.file.read(maxbytes)

    def readline(self):
        "Read a line from the server.  Strip trailing CR and/or LF."
        s = self.file.readline()
        if not s:
            raise EOFError
        if s[-2:] == CRLF:
            s = s[:-2]
        elif s[-1:] in CRLF:
            s = s[:-1]
        return s

def connectZappy(address = "localhost", port = 4242):
    try:
        s = SimpleClient(address, port)
    except socket.error, msg:
        print "Error: Connection Failure."
        sys.exit(1)
    return s

def handshakingZappy(socket, team):
    if socket.readline() == "BIENVENUE":
        print "Success: AnnounceMessage received"
    else:
        print "Error: No AnnounceMessage received"
        return False
    print "Send Team Name"
    socket.writeline(team)
    return True

def randomZappy(socket):
    while True:
        s = simpleCommand[random.randint(0, 999999) % len(simpleCommand)]
        socket.writeline(s)
        socket.writeline("prend nouriture")
        print "Sendings %s" %  s
        s = socket.readline()
        print "Response %s" %  s

if __name__ == '__main__':
    try:
        s = connectZappy(sys.argv[1] if len(sys.argv) >= 2 else "localhost",
                         int(sys.argv[2]) if len(sys.argv) >= 3 else 4242)
        if (handshakingZappy(s, sys.argv[3] if len(sys.argv) >= 4 else "A")):
            randomZappy(s)
    except KeyboardInterrupt:
        pass
    except:
        print 'Termaning bMail.'
